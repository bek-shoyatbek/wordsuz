generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Word {
  id               String            @id @default(uuid())
  title            String            @unique
  transcription    String?
  definitions      Definition[]
  usageFrequency   Int?
  exampleSentences ExampleSentence[]
  verbForms        VerbForm[]
  anagrams         String[]
}

model Definition {
  id       String         @id @default(uuid())
  wordId   String
  word     Word           @relation(fields: [wordId], references: [id])
  typeEn   String
  typeUz   String
  meaning  String
  plural   String?
  others   OtherMeaning[]
  synonyms String[]
  examples Example[]
}

model OtherMeaning {
  id           String     @id @default(uuid())
  definitionId String
  definition   Definition @relation(fields: [definitionId], references: [id])
  meaning      String
  examples     Example[]
}

model Example {
  id             String        @id @default(uuid())
  definitionId   String?
  definition     Definition?   @relation(fields: [definitionId], references: [id])
  otherMeaningId String?
  otherMeaning   OtherMeaning? @relation(fields: [otherMeaningId], references: [id])
  phrase         String
  translation    String
}

model ExampleSentence {
  id          String @id @default(uuid())
  wordId      String
  word        Word   @relation(fields: [wordId], references: [id])
  sentence    String
  translation String
}

model VerbForm {
  id      String @id @default(uuid())
  wordId  String
  word    Word   @relation(fields: [wordId], references: [id])
  tense   String
  content Json
}

model IrregularVerb {
  id             String @id @default(uuid())
  baseForm       String
  pastSimple     String
  pastParticiple String
  meaning        String
}

model Comment {
  id        String   @id @default(uuid())
  date      String
  time      String
  user      String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
