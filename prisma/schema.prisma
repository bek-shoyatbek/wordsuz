generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Prefix {
  id         Int    @id @default(autoincrement())
  title      String
  definition String
}

model Word {
  id               Int               @id @default(autoincrement())
  title            String            @unique
  transcription    String?
  usageFrequency   Int?
  definitions      Definition[]
  exampleSentences ExampleSentence[]
  verbForms        VerbForm[]
  anagrams         String[]
}

model Definition {
  id       Int            @id @default(autoincrement())
  wordId   Int
  word     Word           @relation(fields: [wordId], references: [id])
  typeEn   String
  typeUz   String
  meaning  String
  plural   String?
  others   OtherMeaning[]
  synonyms String[]
  examples Example[]
}

model OtherMeaning {
  id           Int        @id @default(autoincrement())
  definitionId Int
  definition   Definition @relation(fields: [definitionId], references: [id])
  meaning      String
  examples     Example[]
}

model Example {
  id             Int           @id @default(autoincrement())
  definitionId   Int?
  definition     Definition?   @relation(fields: [definitionId], references: [id])
  otherMeaningId Int?
  otherMeaning   OtherMeaning? @relation(fields: [otherMeaningId], references: [id])
  phrase         String
  translation    String
}

model ExampleSentence {
  id          Int    @id @default(autoincrement())
  wordId      Int
  word        Word   @relation(fields: [wordId], references: [id])
  sentence    String
  translation String
}

model VerbForm {
  id      Int    @id @default(autoincrement())
  wordId  Int
  word    Word   @relation(fields: [wordId], references: [id])
  tense   String
  content Json // Store the nested verb form content as JSON
}

model IrregularVerb {
  id             Int    @id @default(autoincrement())
  baseForm       String
  pastSimple     String
  pastParticiple String
  meaning        String
}

model Comment {
  id        Int      @id @default(autoincrement())
  date      String
  time      String
  user      String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
